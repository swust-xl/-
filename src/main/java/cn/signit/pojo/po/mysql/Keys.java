/*
 * This file is generated by jOOQ.
*/
package cn.signit.pojo.po.mysql;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import cn.signit.pojo.po.mysql.tables.UserPerson;
import cn.signit.pojo.po.mysql.tables.VerifyStatistics;
import cn.signit.pojo.po.mysql.tables.records.UserPersonRecord;
import cn.signit.pojo.po.mysql.tables.records.VerifyStatisticsRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>test</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<UserPersonRecord, Long> IDENTITY_USER_PERSON = Identities0.IDENTITY_USER_PERSON;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<UserPersonRecord> KEY_USER_PERSON_PRIMARY = UniqueKeys0.KEY_USER_PERSON_PRIMARY;
    public static final UniqueKey<VerifyStatisticsRecord> KEY_VERIFY_STATISTICS_PRIMARY = UniqueKeys0.KEY_VERIFY_STATISTICS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<UserPersonRecord, Long> IDENTITY_USER_PERSON = Internal.createIdentity(UserPerson.USER_PERSON, UserPerson.USER_PERSON.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<UserPersonRecord> KEY_USER_PERSON_PRIMARY = Internal.createUniqueKey(UserPerson.USER_PERSON, "KEY_user_person_PRIMARY", UserPerson.USER_PERSON.ID);
        public static final UniqueKey<VerifyStatisticsRecord> KEY_VERIFY_STATISTICS_PRIMARY = Internal.createUniqueKey(VerifyStatistics.VERIFY_STATISTICS, "KEY_verify_statistics_PRIMARY", VerifyStatistics.VERIFY_STATISTICS.USERNAME);
    }
}
